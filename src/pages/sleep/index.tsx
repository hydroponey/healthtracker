import { type NextPage } from "next";
import Head from "next/head";

import { useState } from "react";
import { api } from "@/utils/api";

import React from "react";
import { Sleep as SleepModel } from "@prisma/client";

import { Menu, MenuHandler, MenuList, MenuItem, Button } from "@material-tailwind/react";
import SleepTableRow from "@/interfaces/sleep/tablerow";

import SleepTable from "@/components/sleep/table";

const Sleep: NextPage = () => {
    const hello = api.sleep.getAll.useQuery();
    const data = hello.data;
    const today = new Date();
    const sleepData: Array<SleepTableRow> = [];
    const [dataLimit,setDataLimit] = useState(10);
    const [view,setView] = useState(false); // false = table, true = graph
    const [showRangeSelector,setShowRangeSelector] = useState(false);

    for (let i = 0; i < 30; i++)
    {
        const current = new Date(today);
        current.setDate(today.getDate() - i);
        current.setHours(0, 0, 0, 0);

        const dayData = data?.find((item: SleepModel) => item.date.getTime() == current.getTime());

        const curWakeTime = dayData?.wakeUpTime?.toLocaleString().substring(11,16) ?? "";
        const curBedTime = dayData?.bedTime?.toLocaleString().substring(11,16) ?? "";
        const curGetUpTime = dayData?.getUpTime?.toLocaleString().substring(11,16) ?? "";
        const curSleepTime = dayData?.sleepTime?.toLocaleString().substring(11,16) ?? "";

        sleepData[i] = {
            date: current,
            wakeTime: curWakeTime,
            getUpTime: curGetUpTime,
            wakeType: dayData?.wakeUpTired ?? false,
            bedTime: curBedTime,
            sleepTime: curSleepTime,
        };
    }

    /*const handleViewChange = () => {

    }*/

    const handleLimitChange = (button: React.MouseEvent<HTMLLIElement>, value: number|string) => {
        if (typeof value === 'string')
        {
            setShowRangeSelector(true);
        }
        else
        {
            if (showRangeSelector === true)
                setShowRangeSelector(false);
            setDataLimit(value);
        }
    };

    return (
        <>
            <Head>
                <title>Sleep</title>
                <meta name="description" content="Generated by create-t3-app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <main className="h-full">
                <div className="mx-auto mt-2 px-2 rounded overflow-hidden shadow-lg">
                    <div className="px-2 py-4">
                        <h1 className="font-bold text-xl mb-2">Sommeil</h1>
                    </div>
                    <div className="mb-4 flex">
                        <Menu>
                            <MenuHandler>
                                <Button variant="gradient">Période</Button>
                            </MenuHandler>
                            <MenuList>
                                <MenuItem
                                    className={`${dataLimit === 10 ? "font-bold" : ""}`}
                                    value="10"
                                    onClick={(e) => handleLimitChange(e, 10)}
                                >
                                        10 derniers jours
                                </MenuItem>
                                <MenuItem
                                    className={`${dataLimit === 20 ? "font-bold" : ""}`}
                                    value="20"
                                    onClick={(e) => handleLimitChange(e, 20)}
                                >
                                        20 derniers jours
                                </MenuItem>
                                <MenuItem
                                    className={`${dataLimit === 30 ? "font-bold" : ""}`}
                                    value="30"
                                    onClick={(e) => handleLimitChange(e, 30)}
                                >
                                        30 derniers jours
                                </MenuItem>
                            </MenuList>
                        </Menu>
                        {/*<select className="float-left" onChange={handleLimitChange}>
                            <option value="10">10 derniers jours</option>
                            <option value="20">20 derniers jours</option>
                            <option value="30">30 derniers jours</option>
                            <option value="range">Période personnalisée</option>
                        </select>*/}
                        <div id="custom-range" className={showRangeSelector ? '' : 'hidden'}>
                            <label htmlFor="from_date">De</label>
                            <input id="from_date" type="date" value="2023-04-15" />
                            <label htmlFor="from_date">A</label>
                            <input id="from_date" type="date" value="2023-04-15" />
                        </div>
                        <Button
                            variant="gradient"
                            className="ml-auto"
                            onClick={() => setView(!view)}
                        >
                            {view === false ? "Graphique" : "Tableau"}
                        </Button>
                    </div>
                    <div className="mt-8">
                    <SleepTable
                        data={sleepData}
                        limit={dataLimit}
                    />
                    </div>
                </div>
            </main>
        </>
    );
};

export default Sleep;